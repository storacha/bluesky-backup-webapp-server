name: Deploy Storacha
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
jobs:
  test:
    uses: ./.github/workflows/test.yml

  chromatic:
    name: Run Chromatic
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/pnpm
      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          # ⚠️ Make sure to configure a `CHROMATIC_PROJECT_TOKEN` repository secret
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  preview:
    name: Preview
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    environment:
      name: ${{ (github.ref_name == 'main') && 'staging' || format('preview-{0}', github.ref_name) }}
      url: ${{ (github.ref_name == 'main') && 'https://bbs-staging.storacha.network' || steps.cloudflare_url.outputs.stdout }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: create .env from .env.tpl setting env variables used by `pnpm run pages:build`
        run: |
          # set env vars from template

          # omit these because they are added manually in the next step          
          function excludeDefaultServiceVariables() {
            cat - | grep -v NEXT_PUBLIC_STORACHA_SERVICE_
          }

          # set .env from .env.tpl with exclusions
          cat .env.tpl | excludeDefaultServiceVariables > .env

          # add vars configuring us to use staging Storacha as backend
          echo "NEXT_PUBLIC_STORACHA_SERVICE_DID=did:web:staging.web3.storage" >> .env
          echo "NEXT_PUBLIC_STORACHA_SERVICE_URL=https://staging.up.storacha.network" >> .env
          echo "NEXT_PUBLIC_STORACHA_RECEIPTS_URL=https://staging.up.storacha.network/receipt/" >> .env
          echo "NEXT_PUBLIC_STORACHA_PROVIDER=did:web:staging.web3.storage" >> .env
          echo "NEXT_PUBLIC_STORACHA_GATEWAY_HOSTNAME=ipfs-staging.w3s.link" >> .env
          echo "NEXT_PUBLIC_STORACHA_GATEWAY_ID=did:web:ipfs-staging.w3s.link" >> .env
          echo "NEXT_PUBLIC_IPFS_GATEWAY_URL=https://%ROOT_CID%.ipfs-staging.w3s.link" >> .env
          echo "NEXT_PUBLIC_BLUESKY_CLIENT_URI=${{ (github.ref_name == 'main') && 'https://bbs-staging.pages.dev/' || 'https://bbs-preview.pages.dev/' }}" >> .env
          echo "NEXT_PUBLIC_SENTRY_ENV=staging" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
      - run: pnpm cf:build
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        env:
          ENV: 'staging' # inform the build process what the env is
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_UPLOAD: ${{ secrets.SENTRY_UPLOAD }}
        with:
          apiToken: ${{ secrets.CF_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          environment: ${{ (github.ref_name == 'main') && 'staging' || 'preview' }}

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false}]'

  release:
    name: Release
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created)
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://bbs.storacha.network
    needs:
      - test
      - changelog
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - uses: ./.github/actions/pnpm
      - name: create .env from .env.tpl setting env variables used by `pnpm run pages:build`
        run: |
          # set env vars from template

          # omit these because they are added manually in the next step          
          function excludeDefaultServiceVariables() {
            cat - | grep -v NEXT_PUBLIC_STORACHA_SERVICE_
          }

          # set .env from .env.tpl with exclusions
          cat .env.tpl | excludeDefaultServiceVariables > .env

          # add vars configuring the app to use production Storacha
          echo "NEXT_PUBLIC_STORACHA_SERVICE_DID=did:web:web3.storage" >> .env
          echo "NEXT_PUBLIC_STORACHA_SERVICE_URL=https://up.storacha.network" >> .env
          echo "NEXT_PUBLIC_STORACHA_RECEIPTS_URL=https://up.storacha.network/receipt/" >> .env
          echo "NEXT_PUBLIC_STORACHA_PROVIDER=did:web:web3.storage" >> .env
          echo "NEXT_PUBLIC_STORACHA_GATEWAY_HOSTNAME=ipfs.w3s.link" >> .env
          echo "NEXT_PUBLIC_STORACHA_GATEWAY_ID=did:web:w3s.link" >> .env
          echo "NEXT_PUBLIC_IPFS_GATEWAY_URL=https://%ROOT_CID%.ipfs.w3s.link" >> .env
          echo "NEXT_PUBLIC_SENTRY_ENV=production" >> .env
          echo "NEXT_PUBLIC_BLUESKY_CLIENT_URI=https://bbs.storacha.network/" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "NEXT_PUBLIC_STRIPE_PRICING_TABLE_ID=prctbl_1R58oLF6A5ufQX5vozallJKX" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_live_51LO87hF6A5ufQX5vQTO5BHyz8y9ybJp4kg1GsBjYuqwluuwtQTkbeZzkoQweFQDlv7JaGjuIdUWAyuwXp3tmCfsM005lJK9aS8" >> .env
      - run: pnpm cf:build
        env: {}
      - name: Deploy to prod
        uses: cloudflare/wrangler-action@v3
        env:
          ENV: 'production' # inform the build process what the env is
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_UPLOAD: ${{ secrets.SENTRY_UPLOAD }}
        with:
          apiToken: ${{ secrets.CF_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          environment: 'production'