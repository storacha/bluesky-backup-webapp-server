{
  // Knip: Declutter your JavaScript & TypeScript projects
  // https://knip.dev/reference/configuration
  "$schema": "https://unpkg.com/knip@5/schema-jsonc.json",
  "project": [
    // This is the default project glob. (We can't modify this without restating
    // it completely.)
    "**/*.{js,mjs,cjs,jsx,ts,tsx,mts,cts}!",
    // Exclude (`!` at start of pattern) scripts from the production analysis
    // (`!` at end of pattern).
    "!scripts/**!",
  ],
  "entry": [
    // These are the default entry globs. (We can't modify this without
    // restating them completely.)
    "{index,cli,main}.{js,cjs,mjs,jsx,ts,cts,mts,tsx}",
    "src/{index,cli,main}.{js,cjs,mjs,jsx,ts,cts,mts,tsx}",

    // Sentry error handling utils are worth keeping around, even if we're not
    // using them at any particular moment. Consider them an "entry" module for
    // Knip's purposes.
    "src/app/sentry.tsx!",

    // Similarly, this is a copied file and we don't want to to diverge from the
    // original for now, so make it an "entry".
    "src/lib/crypto/keys.ts!",

    // Consider this an "entry" because it has types that happen to only used by
    // Storybook right now.
    "src/app/swr.tsx!",

    // Consider this an "entry" because, like a library would, it exports things
    // we may not use yet, but want to have clearly available.
    "src/types.tsx!",
  ],
  // It's okay to export types even if they aren't (currently) used.
  "exclude": ["types"],
  "ignoreBinaries": [
    // Per README, we expect psql to be installed on the system.
    "psql",
  ],
  "ignoreDependencies": ["chromatic"],
}
